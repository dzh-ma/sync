"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/statistics/page",{

/***/ "(app-pages-browser)/./components/generate-enhanced-reports.tsx":
/*!**************************************************!*\
  !*** ./components/generate-enhanced-reports.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Simple utility function to download enhanced reports from the backend\n// with fallback to client-side generation\nconst generateEnhancedReport = async (timeRange, toast)=>{\n    try {\n        // Convert time range to date range\n        const endDate = new Date().toISOString().split('T')[0]; // Today in YYYY-MM-DD format\n        let startDate;\n        switch(timeRange){\n            case 'week':\n                startDate = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n                break;\n            case 'month':\n                startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n                break;\n            case 'year':\n                startDate = new Date(Date.now() - 365 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n                break;\n            default:\n                startDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n        }\n        // Get auth token from localStorage with error handling\n        let token = \"\";\n        try {\n            // Try different possible token storage locations\n            const authToken = localStorage.getItem(\"authToken\");\n            const jwtToken = localStorage.getItem(\"jwtToken\");\n            const userStr = localStorage.getItem(\"currentUser\");\n            if (authToken) {\n                token = authToken;\n            } else if (jwtToken) {\n                token = jwtToken;\n            } else if (userStr) {\n                const user = JSON.parse(userStr);\n                token = user.token || \"\";\n            }\n        } catch (error) {\n            console.error(\"Error accessing authentication token:\", error);\n        }\n        // If no token, fall back to client-side generation\n        if (!token) {\n            console.warn(\"No authentication token found, falling back to client-side PDF generation\");\n            return false; // Signal to use fallback method\n        }\n        // Prepare the auth header\n        const authHeader = token.startsWith('Bearer ') ? token : \"Bearer \".concat(token);\n        // Call the backend API\n        console.log(\"Downloading report for \".concat(startDate, \" to \").concat(endDate));\n        try {\n            const response = await fetch(\"/api/v1/reports/report?format=pdf&start_date=\".concat(startDate, \"&end_date=\").concat(endDate), {\n                method: 'POST',\n                headers: {\n                    'Authorization': authHeader,\n                    'Accept': 'application/octet-stream'\n                }\n            });\n            if (!response.ok) {\n                // If the API call fails, fall back to client-side generation\n                console.warn(\"API error: \".concat(response.status, \". Falling back to client-side PDF generation\"));\n                return false; // Signal to use fallback method\n            }\n            // Process the file download\n            const blob = await response.blob();\n            const fileURL = window.URL.createObjectURL(blob);\n            const downloadLink = document.createElement('a');\n            downloadLink.href = fileURL;\n            downloadLink.download = \"energy_report_\".concat(new Date().toISOString().split('T')[0], \".pdf\");\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n            if (toast) {\n                toast({\n                    title: \"Report Downloaded\",\n                    description: \"Your enhanced energy report has been downloaded.\"\n                });\n            }\n            return true; // Signal successful download\n        } catch (fetchError) {\n            console.error(\"Error fetching report:\", fetchError);\n            return false; // Signal to use fallback method\n        }\n    } catch (error) {\n        console.error(\"Error in report generation:\", error);\n        // Fall back to client-side generation on any error\n        return false; // Signal to use fallback method\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (generateEnhancedReport);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/generate-enhanced-reports.tsx\n"));

/***/ })

});