/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/statistics/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdzh-ma%2FWork%2Fsync%2Fapp%2Fstatistics%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdzh-ma%2FWork%2Fsync%2Fapp%2Fstatistics%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./app/statistics/page.tsx */ \"(app-pages-browser)/./app/statistics/page.tsx\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmR6aC1tYSUyRldvcmslMkZzeW5jJTJGYXBwJTJGc3RhdGlzdGljcyUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsa0xBQW1GIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9kemgtbWEvV29yay9zeW5jL2FwcC9zdGF0aXN0aWNzL3BhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdzh-ma%2FWork%2Fsync%2Fapp%2Fstatistics%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/statistics/page.tsx":
/*!*********************************!*\
  !*** ./app/statistics/page.tsx ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// Updated PDF generation function with font error handling\nconst generatePDF = async (devices, rooms)=>{\n    const pdfDoc = await PDFDocument.create();\n    const page = pdfDoc.addPage();\n    const { width, height } = page.getSize();\n    const fontSize = 12;\n    // Add title\n    page.drawText(\"Energy Consumption Report\", {\n        x: 50,\n        y: height - 50,\n        size: 20,\n        color: rgb(0, 0, 0)\n    });\n    // Add date\n    const currentDate = new Date().toLocaleDateString();\n    page.drawText(\"Generated on: \".concat(currentDate), {\n        x: 50,\n        y: height - 80,\n        size: fontSize,\n        color: rgb(0.5, 0.5, 0.5)\n    });\n    // Add device usage table\n    page.drawText(\"Device Usage\", {\n        x: 50,\n        y: height - 120,\n        size: 16,\n        color: rgb(0, 0, 0)\n    });\n    devices.forEach((device, index)=>{\n        page.drawText(\"\".concat(device.name, \" (\").concat(device.type, \"): \").concat(device.totalEnergyConsumed.toFixed(2), \" kWh\"), {\n            x: 50,\n            y: height - 150 - index * 20,\n            size: fontSize,\n            color: rgb(0, 0, 0)\n        });\n    });\n    // Add room usage table\n    page.drawText(\"Room Usage\", {\n        x: 50,\n        y: height - 300,\n        size: 16,\n        color: rgb(0, 0, 0)\n    });\n    rooms.forEach((room, index)=>{\n        const roomUsage = devices.filter((d)=>d.room === room.name).reduce((sum, d)=>sum + d.totalEnergyConsumed, 0);\n        page.drawText(\"\".concat(room.name, \": \").concat(roomUsage.toFixed(2), \" kWh\"), {\n            x: 50,\n            y: height - 330 - index * 20,\n            size: fontSize,\n            color: rgb(0, 0, 0)\n        });\n    });\n    try {\n        // Add charts\n        const charts = document.querySelectorAll(\".chart-container\");\n        for(let i = 0; i < charts.length; i++){\n            const chart = charts[i];\n            try {\n                // Use a simplified approach to avoid font issues\n                const pngImage = await toPng(chart, {\n                    quality: 0.95,\n                    backgroundColor: \"#ffffff\",\n                    skipFonts: true,\n                    style: {\n                        // Ensure basic styles are applied\n                        'font-family': 'Arial, sans-serif'\n                    }\n                });\n                const image = await pdfDoc.embedPng(pngImage);\n                page.drawImage(image, {\n                    x: 50,\n                    y: height - 500 - i * 300,\n                    width: 500,\n                    height: 250\n                });\n            } catch (chartError) {\n                console.error(\"Error capturing chart \".concat(i, \":\"), chartError);\n            // Just continue to the next chart if one fails\n            }\n        }\n    } catch (chartsError) {\n        console.error(\"Error processing charts:\", chartsError);\n    // Continue with the rest of the PDF generation even if charts fail\n    }\n    // Save and download the PDF even if some charts failed\n    try {\n        const pdfBytes = await pdfDoc.save();\n        const blob = new Blob([\n            pdfBytes\n        ], {\n            type: \"application/pdf\"\n        });\n        const link = document.createElement(\"a\");\n        link.href = URL.createObjectURL(blob);\n        link.download = \"energy_statistics.pdf\";\n        link.click();\n    } catch (saveError) {\n        console.error(\"Error saving PDF:\", saveError);\n        alert(\"There was an error generating the PDF. Please try again.\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9zdGF0aXN0aWNzL3BhZ2UudHN4IiwibWFwcGluZ3MiOiJBQUFBLDJEQUEyRDtBQUMzRCxNQUFNQSxjQUFjLE9BQU9DLFNBQW1CQztJQUM1QyxNQUFNQyxTQUFTLE1BQU1DLFlBQVlDLE1BQU07SUFDdkMsTUFBTUMsT0FBT0gsT0FBT0ksT0FBTztJQUMzQixNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFLEdBQUdILEtBQUtJLE9BQU87SUFDdEMsTUFBTUMsV0FBVztJQUVqQixZQUFZO0lBQ1pMLEtBQUtNLFFBQVEsQ0FBQyw2QkFBNkI7UUFDekNDLEdBQUc7UUFDSEMsR0FBR0wsU0FBUztRQUNaTSxNQUFNO1FBQ05DLE9BQU9DLElBQUksR0FBRyxHQUFHO0lBQ25CO0lBRUEsV0FBVztJQUNYLE1BQU1DLGNBQWMsSUFBSUMsT0FBT0Msa0JBQWtCO0lBQ2pEZCxLQUFLTSxRQUFRLENBQUMsaUJBQTZCLE9BQVpNLGNBQWU7UUFDNUNMLEdBQUc7UUFDSEMsR0FBR0wsU0FBUztRQUNaTSxNQUFNSjtRQUNOSyxPQUFPQyxJQUFJLEtBQUssS0FBSztJQUN2QjtJQUVBLHlCQUF5QjtJQUN6QlgsS0FBS00sUUFBUSxDQUFDLGdCQUFnQjtRQUM1QkMsR0FBRztRQUNIQyxHQUFHTCxTQUFTO1FBQ1pNLE1BQU07UUFDTkMsT0FBT0MsSUFBSSxHQUFHLEdBQUc7SUFDbkI7SUFFQWhCLFFBQVFvQixPQUFPLENBQUMsQ0FBQ0MsUUFBUUM7UUFDdkJqQixLQUFLTSxRQUFRLENBQUMsR0FBbUJVLE9BQWhCQSxPQUFPRSxJQUFJLEVBQUMsTUFBcUJGLE9BQWpCQSxPQUFPRyxJQUFJLEVBQUMsT0FBMkMsT0FBdENILE9BQU9JLG1CQUFtQixDQUFDQyxPQUFPLENBQUMsSUFBRyxTQUFPO1lBQzdGZCxHQUFHO1lBQ0hDLEdBQUdMLFNBQVMsTUFBTWMsUUFBUTtZQUMxQlIsTUFBTUo7WUFDTkssT0FBT0MsSUFBSSxHQUFHLEdBQUc7UUFDbkI7SUFDRjtJQUVBLHVCQUF1QjtJQUN2QlgsS0FBS00sUUFBUSxDQUFDLGNBQWM7UUFDMUJDLEdBQUc7UUFDSEMsR0FBR0wsU0FBUztRQUNaTSxNQUFNO1FBQ05DLE9BQU9DLElBQUksR0FBRyxHQUFHO0lBQ25CO0lBRUFmLE1BQU1tQixPQUFPLENBQUMsQ0FBQ08sTUFBTUw7UUFDbkIsTUFBTU0sWUFBWTVCLFFBQVE2QixNQUFNLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUgsSUFBSSxLQUFLQSxLQUFLSixJQUFJLEVBQUVRLE1BQU0sQ0FBQyxDQUFDQyxLQUFLRixJQUFNRSxNQUFNRixFQUFFTCxtQkFBbUIsRUFBRTtRQUM5R3BCLEtBQUtNLFFBQVEsQ0FBQyxHQUFpQmlCLE9BQWRELEtBQUtKLElBQUksRUFBQyxNQUF5QixPQUFyQkssVUFBVUYsT0FBTyxDQUFDLElBQUcsU0FBTztZQUN6RGQsR0FBRztZQUNIQyxHQUFHTCxTQUFTLE1BQU1jLFFBQVE7WUFDMUJSLE1BQU1KO1lBQ05LLE9BQU9DLElBQUksR0FBRyxHQUFHO1FBQ25CO0lBQ0Y7SUFFQSxJQUFJO1FBQ0YsYUFBYTtRQUNiLE1BQU1pQixTQUFTQyxTQUFTQyxnQkFBZ0IsQ0FBQztRQUN6QyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUgsT0FBT0ksTUFBTSxFQUFFRCxJQUFLO1lBQ3RDLE1BQU1FLFFBQVFMLE1BQU0sQ0FBQ0csRUFBRTtZQUV2QixJQUFJO2dCQUNGLGlEQUFpRDtnQkFDakQsTUFBTUcsV0FBVyxNQUFNQyxNQUFNRixPQUFPO29CQUNsQ0csU0FBUztvQkFDVEMsaUJBQWlCO29CQUNqQkMsV0FBVztvQkFDWEMsT0FBTzt3QkFDTCxrQ0FBa0M7d0JBQ2xDLGVBQWU7b0JBQ2pCO2dCQUNGO2dCQUVBLE1BQU1DLFFBQVEsTUFBTTNDLE9BQU80QyxRQUFRLENBQUNQO2dCQUVwQ2xDLEtBQUswQyxTQUFTLENBQUNGLE9BQU87b0JBQ3BCakMsR0FBRztvQkFDSEMsR0FBR0wsU0FBUyxNQUFNNEIsSUFBSTtvQkFDdEI3QixPQUFPO29CQUNQQyxRQUFRO2dCQUNWO1lBQ0YsRUFBRSxPQUFPd0MsWUFBWTtnQkFDbkJDLFFBQVFDLEtBQUssQ0FBQyx5QkFBMkIsT0FBRmQsR0FBRSxNQUFJWTtZQUM3QywrQ0FBK0M7WUFDakQ7UUFDRjtJQUNGLEVBQUUsT0FBT0csYUFBYTtRQUNwQkYsUUFBUUMsS0FBSyxDQUFDLDRCQUE0QkM7SUFDMUMsbUVBQW1FO0lBQ3JFO0lBRUEsdURBQXVEO0lBQ3ZELElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1sRCxPQUFPbUQsSUFBSTtRQUNsQyxNQUFNQyxPQUFPLElBQUlDLEtBQUs7WUFBQ0g7U0FBUyxFQUFFO1lBQUU1QixNQUFNO1FBQWtCO1FBQzVELE1BQU1nQyxPQUFPdEIsU0FBU3VCLGFBQWEsQ0FBQztRQUNwQ0QsS0FBS0UsSUFBSSxHQUFHQyxJQUFJQyxlQUFlLENBQUNOO1FBQ2hDRSxLQUFLSyxRQUFRLEdBQUc7UUFDaEJMLEtBQUtNLEtBQUs7SUFDWixFQUFFLE9BQU9DLFdBQVc7UUFDbEJkLFFBQVFDLEtBQUssQ0FBQyxxQkFBcUJhO1FBQ25DQyxNQUFNO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZHpoLW1hL1dvcmsvc3luYy9hcHAvc3RhdGlzdGljcy9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVcGRhdGVkIFBERiBnZW5lcmF0aW9uIGZ1bmN0aW9uIHdpdGggZm9udCBlcnJvciBoYW5kbGluZ1xuY29uc3QgZ2VuZXJhdGVQREYgPSBhc3luYyAoZGV2aWNlczogRGV2aWNlW10sIHJvb21zOiBSb29tW10pID0+IHtcbiAgY29uc3QgcGRmRG9jID0gYXdhaXQgUERGRG9jdW1lbnQuY3JlYXRlKCk7XG4gIGNvbnN0IHBhZ2UgPSBwZGZEb2MuYWRkUGFnZSgpO1xuICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IHBhZ2UuZ2V0U2l6ZSgpO1xuICBjb25zdCBmb250U2l6ZSA9IDEyO1xuXG4gIC8vIEFkZCB0aXRsZVxuICBwYWdlLmRyYXdUZXh0KFwiRW5lcmd5IENvbnN1bXB0aW9uIFJlcG9ydFwiLCB7XG4gICAgeDogNTAsXG4gICAgeTogaGVpZ2h0IC0gNTAsXG4gICAgc2l6ZTogMjAsXG4gICAgY29sb3I6IHJnYigwLCAwLCAwKSxcbiAgfSk7XG5cbiAgLy8gQWRkIGRhdGVcbiAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xuICBwYWdlLmRyYXdUZXh0KGBHZW5lcmF0ZWQgb246ICR7Y3VycmVudERhdGV9YCwge1xuICAgIHg6IDUwLFxuICAgIHk6IGhlaWdodCAtIDgwLFxuICAgIHNpemU6IGZvbnRTaXplLFxuICAgIGNvbG9yOiByZ2IoMC41LCAwLjUsIDAuNSksXG4gIH0pO1xuXG4gIC8vIEFkZCBkZXZpY2UgdXNhZ2UgdGFibGVcbiAgcGFnZS5kcmF3VGV4dChcIkRldmljZSBVc2FnZVwiLCB7XG4gICAgeDogNTAsXG4gICAgeTogaGVpZ2h0IC0gMTIwLFxuICAgIHNpemU6IDE2LFxuICAgIGNvbG9yOiByZ2IoMCwgMCwgMCksXG4gIH0pO1xuXG4gIGRldmljZXMuZm9yRWFjaCgoZGV2aWNlLCBpbmRleCkgPT4ge1xuICAgIHBhZ2UuZHJhd1RleHQoYCR7ZGV2aWNlLm5hbWV9ICgke2RldmljZS50eXBlfSk6ICR7ZGV2aWNlLnRvdGFsRW5lcmd5Q29uc3VtZWQudG9GaXhlZCgyKX0ga1doYCwge1xuICAgICAgeDogNTAsXG4gICAgICB5OiBoZWlnaHQgLSAxNTAgLSBpbmRleCAqIDIwLFxuICAgICAgc2l6ZTogZm9udFNpemUsXG4gICAgICBjb2xvcjogcmdiKDAsIDAsIDApLFxuICAgIH0pO1xuICB9KTtcblxuICAvLyBBZGQgcm9vbSB1c2FnZSB0YWJsZVxuICBwYWdlLmRyYXdUZXh0KFwiUm9vbSBVc2FnZVwiLCB7XG4gICAgeDogNTAsXG4gICAgeTogaGVpZ2h0IC0gMzAwLFxuICAgIHNpemU6IDE2LFxuICAgIGNvbG9yOiByZ2IoMCwgMCwgMCksXG4gIH0pO1xuXG4gIHJvb21zLmZvckVhY2goKHJvb20sIGluZGV4KSA9PiB7XG4gICAgY29uc3Qgcm9vbVVzYWdlID0gZGV2aWNlcy5maWx0ZXIoKGQpID0+IGQucm9vbSA9PT0gcm9vbS5uYW1lKS5yZWR1Y2UoKHN1bSwgZCkgPT4gc3VtICsgZC50b3RhbEVuZXJneUNvbnN1bWVkLCAwKTtcbiAgICBwYWdlLmRyYXdUZXh0KGAke3Jvb20ubmFtZX06ICR7cm9vbVVzYWdlLnRvRml4ZWQoMil9IGtXaGAsIHtcbiAgICAgIHg6IDUwLFxuICAgICAgeTogaGVpZ2h0IC0gMzMwIC0gaW5kZXggKiAyMCxcbiAgICAgIHNpemU6IGZvbnRTaXplLFxuICAgICAgY29sb3I6IHJnYigwLCAwLCAwKSxcbiAgICB9KTtcbiAgfSk7XG5cbiAgdHJ5IHtcbiAgICAvLyBBZGQgY2hhcnRzXG4gICAgY29uc3QgY2hhcnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jaGFydC1jb250YWluZXJcIik7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGNoYXJ0ID0gY2hhcnRzW2ldIGFzIEhUTUxFbGVtZW50O1xuICAgICAgXG4gICAgICB0cnkge1xuICAgICAgICAvLyBVc2UgYSBzaW1wbGlmaWVkIGFwcHJvYWNoIHRvIGF2b2lkIGZvbnQgaXNzdWVzXG4gICAgICAgIGNvbnN0IHBuZ0ltYWdlID0gYXdhaXQgdG9QbmcoY2hhcnQsIHtcbiAgICAgICAgICBxdWFsaXR5OiAwLjk1LFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgc2tpcEZvbnRzOiB0cnVlLCAvLyBTa2lwIGZvbnQgcHJvY2Vzc2luZyB0byBhdm9pZCBlcnJvcnNcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgLy8gRW5zdXJlIGJhc2ljIHN0eWxlcyBhcmUgYXBwbGllZFxuICAgICAgICAgICAgJ2ZvbnQtZmFtaWx5JzogJ0FyaWFsLCBzYW5zLXNlcmlmJ1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgaW1hZ2UgPSBhd2FpdCBwZGZEb2MuZW1iZWRQbmcocG5nSW1hZ2UpO1xuICAgICAgICBcbiAgICAgICAgcGFnZS5kcmF3SW1hZ2UoaW1hZ2UsIHtcbiAgICAgICAgICB4OiA1MCxcbiAgICAgICAgICB5OiBoZWlnaHQgLSA1MDAgLSBpICogMzAwLFxuICAgICAgICAgIHdpZHRoOiA1MDAsXG4gICAgICAgICAgaGVpZ2h0OiAyNTAsXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoY2hhcnRFcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBjYXB0dXJpbmcgY2hhcnQgJHtpfTpgLCBjaGFydEVycm9yKTtcbiAgICAgICAgLy8gSnVzdCBjb250aW51ZSB0byB0aGUgbmV4dCBjaGFydCBpZiBvbmUgZmFpbHNcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGNoYXJ0c0Vycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIHByb2Nlc3NpbmcgY2hhcnRzOlwiLCBjaGFydHNFcnJvcik7XG4gICAgLy8gQ29udGludWUgd2l0aCB0aGUgcmVzdCBvZiB0aGUgUERGIGdlbmVyYXRpb24gZXZlbiBpZiBjaGFydHMgZmFpbFxuICB9XG5cbiAgLy8gU2F2ZSBhbmQgZG93bmxvYWQgdGhlIFBERiBldmVuIGlmIHNvbWUgY2hhcnRzIGZhaWxlZFxuICB0cnkge1xuICAgIGNvbnN0IHBkZkJ5dGVzID0gYXdhaXQgcGRmRG9jLnNhdmUoKTtcbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW3BkZkJ5dGVzXSwgeyB0eXBlOiBcImFwcGxpY2F0aW9uL3BkZlwiIH0pO1xuICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgICBsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgIGxpbmsuZG93bmxvYWQgPSBcImVuZXJneV9zdGF0aXN0aWNzLnBkZlwiO1xuICAgIGxpbmsuY2xpY2soKTtcbiAgfSBjYXRjaCAoc2F2ZUVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIHNhdmluZyBQREY6XCIsIHNhdmVFcnJvcik7XG4gICAgYWxlcnQoXCJUaGVyZSB3YXMgYW4gZXJyb3IgZ2VuZXJhdGluZyB0aGUgUERGLiBQbGVhc2UgdHJ5IGFnYWluLlwiKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJnZW5lcmF0ZVBERiIsImRldmljZXMiLCJyb29tcyIsInBkZkRvYyIsIlBERkRvY3VtZW50IiwiY3JlYXRlIiwicGFnZSIsImFkZFBhZ2UiLCJ3aWR0aCIsImhlaWdodCIsImdldFNpemUiLCJmb250U2l6ZSIsImRyYXdUZXh0IiwieCIsInkiLCJzaXplIiwiY29sb3IiLCJyZ2IiLCJjdXJyZW50RGF0ZSIsIkRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJmb3JFYWNoIiwiZGV2aWNlIiwiaW5kZXgiLCJuYW1lIiwidHlwZSIsInRvdGFsRW5lcmd5Q29uc3VtZWQiLCJ0b0ZpeGVkIiwicm9vbSIsInJvb21Vc2FnZSIsImZpbHRlciIsImQiLCJyZWR1Y2UiLCJzdW0iLCJjaGFydHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpIiwibGVuZ3RoIiwiY2hhcnQiLCJwbmdJbWFnZSIsInRvUG5nIiwicXVhbGl0eSIsImJhY2tncm91bmRDb2xvciIsInNraXBGb250cyIsInN0eWxlIiwiaW1hZ2UiLCJlbWJlZFBuZyIsImRyYXdJbWFnZSIsImNoYXJ0RXJyb3IiLCJjb25zb2xlIiwiZXJyb3IiLCJjaGFydHNFcnJvciIsInBkZkJ5dGVzIiwic2F2ZSIsImJsb2IiLCJCbG9iIiwibGluayIsImNyZWF0ZUVsZW1lbnQiLCJocmVmIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiZG93bmxvYWQiLCJjbGljayIsInNhdmVFcnJvciIsImFsZXJ0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/statistics/page.tsx\n"));

/***/ })

});